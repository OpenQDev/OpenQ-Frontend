version: 2.1
orbs:
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Update DEPLOY_ENV environment variable using CIRCLE_TAG
          command: |
            echo 'export DEPLOY_ENV=$(echo ${CIRCLE_TAG} | sed 's/-.*//')' >> $BASH_ENV
            source $BASH_ENV
      - run: echo $DEPLOY_ENV
      - run:
          name: Load .env based on $DEPLOY_ENV
          command: |
            if [ "$DEPLOY_ENV" = staging ]; then
              echo "$staging_env" | base64 --decode > $(pwd)/.env
              echo "" >> $(pwd)/.env
              echo "BUILD_NUMBER=$CIRCLE_TAG" >> $(pwd)/.env
            fi
            if [ "$DEPLOY_ENV" = production ]; then
              echo "$production_env" | base64 --decode > $(pwd)/.env
              echo "" >> $(pwd)/.env
              echo "BUILD_NUMBER=$CIRCLE_TAG" >> $(pwd)/.env
            fi
      - run: docker build -t openq/openq-frontend:$CIRCLE_TAG --build-arg deploy_env=$DEPLOY_ENV .
      - run: docker run -d --name openq-frontend openq/openq-frontend:$CIRCLE_TAG
      - run: docker push openq/openq-frontend:$CIRCLE_TAG

  test:
    parallelism: 10
    machine: true
    steps:
      - checkout
      - run: docker pull openq/openq-frontend:$CIRCLE_TAG
      - run: docker run -d --name openq-frontend openq/openq-frontend:$CIRCLE_TAG
      - run: docker exec openq-frontend yarn json-server:cicd
      - run:
          name: Test application
          command: |
            TEST=$(circleci tests glob "**/*.test.js" | circleci tests split --split-by=timings)
            docker exec openq-frontend yarn test:cicd $TEST
            echo $TEST
      - run:
          command: mkdir ~/test-results && mkdir ~/test-results/reports docker cp openq-frontend:/app/junit.xml ~/test-results/reports/junit.xml
          when: always
      - store_test_results:
          path: ~/test-results/reports/junit.xml
      - store_artifacts:
          path: ~/test-results/reports/junit.xml

  pushHelm:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Update DEPLOY_ENV environment variable using CIRCLE_TAG
          command: |
            echo 'export DEPLOY_ENV=$(echo ${CIRCLE_TAG} | sed 's/-.*//')' >> $BASH_ENV
            source $BASH_ENV
      - run: echo $DEPLOY_ENV
      - run:
          command: |
            wget https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_386
            sudo mv yq_linux_386 /usr/local/bin/yq
            sudo chmod +x /usr/local/bin/yq
            git clone https://${CIRCLECI_PAT}@github.com/openqdev/OpenQ-Helm.git
            cd OpenQ-Helm/
            yq -i '.frontend.image.tag = env(CIRCLE_TAG)' values-$DEPLOY_ENV.yaml
            cat values-$DEPLOY_ENV.yaml
            git add .
            git commit -m "[CIRCLE CI] ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG}"
            git remote set-url origin https://${CIRCLECI_PAT}@github.com/openqdev/OpenQ-Helm.git
            git push
            git tag -f ${CIRCLE_TAG}
            git push -f origin ${CIRCLE_TAG} --tags

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          context: OpenQ
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^staging.*/
                - /^production.*/
      - test:
          context: OpenQ
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^staging.*/
                - /^production.*/
      - pushHelm:
          context: OpenQ
          requires:
            - build
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^staging.*/
                - /^production.*/
