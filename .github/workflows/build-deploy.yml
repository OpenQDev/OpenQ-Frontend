#git add . && git commit -m "updates" && git push && git tag -f staging-1.0.0 && git push origin -f staging-1.0.1
name: Build + Push Frontend

on:
  push:
    tags:
      - 'staging-*'
      - 'production-*'

jobs:
  build:
    if: false
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract environment from tag
        id: extract_environment
        run: |
          ENVIRONMENT=$(echo "${{ github.ref_name }}" | sed 's/-.*//')
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
      - name: Load proper env from secret
        run: |
          if [ "${{ env.ENVIRONMENT }}" = "staging" ]; then
            echo "${{ secrets.STAGING_ENV }}" | base64 --decode > $(pwd)/.env
            echo "BUILD_NUMBER=${{ github.ref_name }}" >> $(pwd)/.env
            echo "" >> $(pwd)/.env
          fi
          if [ "${{ env.ENVIRONMENT }}" = "production" ]; then
            echo "${{ secrets.PRODUCTION_ENV }}" | base64 --decode > $(pwd)/.env
            echo "BUILD_NUMBER=${{ github.ref_name }}" >> $(pwd)/.env
            echo "" >> $(pwd)/.env
          fi
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: openq/openq-frontend:${{ github.ref_name }}
          build-args: |
            "deploy_env=${{ env.ENVIRONMENT }}"
  pushHelm:
    name: Update Helm Chart and Commit New Tag
    runs-on: ubuntu-latest
    steps:
      - name: Extract environment from tag
        id: extract_environment
        run: |
          ENVIRONMENT=$(echo "${{ github.ref_name }}" | sed 's/-.*//')
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
      - name: Update Helm Chart and Push Tag
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_386
          sudo mv yq_linux_386 /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          git config --global user.email "${{ env.email }}"
          git config --global user.name "CICD_Pipeline"
          git clone https://${{ secrets.PAT }}@github.com/openqdev/OpenQ-Helm.git
          cd OpenQ-Helm/
          if [ "$${{ env.ENVIRONMENT }}" = staging ]; then
            yq -i '.frontend.image.tag = env(ENVIRONMENT)' values-staging.yaml
          fi
          if [ "$${{ env.ENVIRONMENT }}" = production ]; then
            yq -i '.frontend.image.tag = env(ENVIRONMENT)' values-production.yaml
          fi
          git add .
          git commit -m "[CIRCLE CI] ${{ github.ref_name }}"
          git remote set-url origin https://${{ secrets.PAT }}@github.com/openqdev/OpenQ-Helm.git
          git push
          git tag -f ${{ github.ref_name }}
          git push -f origin ${{ github.ref_name }} --tags
